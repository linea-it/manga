upstream mangaapi {
  ip_hash;
  server backend:8000;
}

#upstream mangafrontend {
#  ip_hash;
#  server frontend:3000;
#}

upstream mangaflower {
  ip_hash;
  server flower:5555;
}


server {
  listen 8080;

  charset utf-8;

  # Increase max upload size
  client_max_body_size 400M;

  gzip on;
  gzip_comp_level  9;
  gzip_min_length 128;
  gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css text/html application/json  application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

  location /api {
      include uwsgi_params;
      uwsgi_pass mangaapi;
      uwsgi_read_timeout 120s;
      uwsgi_send_timeout 120s;
  }

  # Admin
  location /admin {
      include uwsgi_params;
      uwsgi_pass mangaapi;
  }

  location /django_static {
      include uwsgi_params;
      uwsgi_pass mangaapi;
  }

  location /media {
      uwsgi_pass $scheme://mangaapi$request_uri;
  }


  location /data {
      alias /var/www/data/;
      try_files $uri $uri/ /index.html;
      autoindex on;
      #limit_conn   limitconnbyaddr  5;
  }

  location /table {
      alias /var/www/table/;
      try_files $uri $uri/ /index.html;
      # autoindex off;
  }

  # Frontend
  # Proxy pass to frontend development server with live relead
  # Based in this article: https://nathanfriend.io/2018/05/14/live-reloading-an-angular-2-app-behind-nginx.html
  location / {
      #proxy_pass $scheme://mangafrontend;
      proxy_pass http://frontend:3000;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header Host $host;

      # live reload
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_cache_bypass $http_upgrade;
  }
}
